def versions = [min_sdk    : 21,
                target_sdk : 30,
                compile_sdk: 28,
                build_tools: "29.0.2",
                kotlin     : "1.4.32"]

def androidx = [legacy              : "androidx.legacy:legacy-support-v4:1.0.0",
                appcompat           : "androidx.appcompat:appcompat:1.0.2",
                activity            : "androidx.activity:activity-ktx:1.2.3",
                fragment            : "androidx.fragment:fragment-ktx:1.3.3",
                fragment_testing    : "androidx.fragment:fragment-testing:1.3.3",
                cardview            : "androidx.cardview:cardview:1.0.0",
                constraint_layout   : "androidx.constraintlayout:constraintlayout:2.0.4",
                recycler_view       : "androidx.recyclerview:recyclerview:1.0.0",
                navigation_ui       : "androidx.navigation:navigation-ui-ktx:2.2.2",
                emoji               : "androidx.emoji:emoji-bundled:1.1.0",
                viewpager_2         : "androidx.viewpager2:viewpager2:1.0.0",
                paging_runtime      : "androidx.paging:paging-runtime-ktx:3.0.1",
                paging_common       : "androidx.paging:paging-common-ktx:3.0.1",
                multidex            : "androidx.multidex:multidex:2.0.0",
                core_ktx            : "androidx.core:core-ktx:1.5.0",
                lifecycle_extensions: "androidx.lifecycle:lifecycle-extensions:2.2.0",
                lifecycle_livedata  : "androidx.lifecycle:lifecycle-livedata-ktx:2.2.0",
                lifecycle_viewmodel : "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0",
                lifecycle_runtime   : "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0",
                browser             : "androidx.browser:browser:1.3.0",
                work_runtime        : "androidx.work:work-runtime-ktx:2.5.0",
                junit_extensions    : "androidx.test.ext:junit:1.1.2",
                test_runner         : "androidx.test:runner:1.3.0",
                test_core           : "androidx.test:core:1.3.0",
                test_rules          : "androidx.test:rules:1.3.0",
                test_orchestrator   : "androidx.test:orchestrator:1.3.0",
                espresso_intents    : "androidx.test.espresso:espresso-intents:3.3.0",
                espresso_contrib    : "androidx.test.espresso:espresso-contrib:3.3.0",
                espresso_core       : "androidx.test.espresso:espresso-core:3.3.0",]

def firebase = [plugin            : "com.google.firebase:firebase-plugins:1.1.5",
                crashlytics_plugin: "com.google.firebase:firebase-crashlytics-gradle:2.3.0",
                crashlytics       : "com.google.firebase:firebase-crashlytics:17.3.0",
                analytics         : "com.google.firebase:firebase-analytics-ktx:18.0.2",
                messaging         : "com.google.firebase:firebase-messaging:17.3.4",
                core              : "com.google.firebase:firebase-core:18.0.0",
                auth              : "com.google.firebase:firebase-auth:20.0.0",
                config            : "com.google.firebase:firebase-config:20.0.0",
                config_ktx        : "com.google.firebase:firebase-config-ktx:20.0.3",]

def room = [ktx     : "androidx.room:room-ktx:2.3.0",
            runtime : "androidx.room:room-runtime:2.3.0",
            compiler: "androidx.room:room-compiler:2.3.0",]

def hilt = [plugin  : "com.google.dagger:hilt-android-gradle-plugin:2.35.1",
            compiler: "com.google.dagger:hilt-compiler:2.35.1",
            android : "com.google.dagger:hilt-android:2.35.1",]

def arch = [work_runtime    : "android.arch.work:work-runtime:2.5.0",
            testing_androidx: "androidx.arch.core:core-testing:2.1.0",
            testing         : "android.arch.core:core-testing:1.1.1",]

def google_services = [plugin  : "com.google.gms:google-services:4.2.0",
                       core    : "com.google.android.play:core:1.10.0",
                       auth    : "com.google.android.gms:play-services-auth:16.0.1",
                       location: "com.google.android.gms:play-services-location:16.0.0",
                       base    : "com.google.android.gms:play-services-base:16.0.1",
                       vision  : "com.google.android.gms:play-services-vision:19.0.0"]

def coroutines = [core   : "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9",
                  android: "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9",
                  testing: "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.2.1",]

def core = [coroutines         : coroutines,
            gradle_plugin      : "com.android.tools.build:gradle:4.1.2",
            kotlin_stdlib      : "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$versions.kotlin",
            kotlin_plugin      : "org.jetbrains.kotlin:kotlin-gradle-plugin:$versions.kotlin",
            proguard_plugin    : "net.sf.proguard:proguard-gradle:6.1.1",
            databinding        : "com.android.databinding:compiler:3.1.2",
            install_referrer   : "com.android.installreferrer:installreferrer:1.1",
            retrofit           : "com.squareup.retrofit2:retrofit:2.9.0",
            retrofit_gson      : "com.squareup.retrofit2:converter-gson:2.9.0",
            timber             : "com.jakewharton.timber:timber:5.0.1",
            logging_interceptor: "com.squareup.okhttp3:logging-interceptor:3.8.0",]

def junit = [plugin        : "de.mannodermaus.gradle.plugins:android-junit5:1.7.1.1",
             api           : "org.junit.jupiter:junit-jupiter-api:5.7.1",
             params        : "org.junit.jupiter:junit-jupiter-params:5.7.1",
             vintage_engine: "org.junit.vintage:junit-vintage-engine:5.7.1",
             jupiter_engine: "org.junit.jupiter:junit-jupiter-engine:5.7.1",
             runner        : "org.junit.platform:junit-platform-runner:1.6.2",
             kotlin_tests  : "org.jetbrains.kotlin:kotlin-test-junit:$versions.kotlin",]

def testing = [junit             : junit,
               truth             : "com.google.truth:truth:1.1.2",
               roboelectric      : "org.robolectric:robolectric:4.5.1",
               mockk             : "io.mockk:mockk:1.10.6",
               mockk_android     : "io.mockk:mockk-android:1.10.6",
               mockwebserver     : "com.squareup.okhttp3:mockwebserver:3.8.0",]

def realm = [plugin: "io.realm:realm-gradle-plugin:10.9.0"]

def segment = [analytics            : "com.segment.analytics.android:analytics:4.10.0",
               braze_integration    : "com.appboy:appboy-segment-integration:7.0.0",
               appsflyer_integration: "com.appsflyer:segment-android-integration:6.2.3",
               apptimize_integration: "com.apptimize.segment:apptimize-segment-integration:3.7.16",]

def newrelic = [plugin       : "com.newrelic.agent.android:agent-gradle-plugin:5.25.2",
                android_agent: "com.newrelic.agent.android:android-agent:5.25.2",]

def others = [shot_plugin          : "com.karumi:shot:4.4.0",
              zxing                : "com.google.zxing:core:3.4.0",
              custom_crash         : "cat.ereza:customactivityoncrash:2.2.0",
              eventbus             : "org.greenrobot:eventbus:3.1.1",
              branch               : "io.branch.sdk.android:library:4.0.0",
              sift_android         : "com.siftscience:sift-android:0.10.4",
              qr_generator         : "com.github.bcilabs:AwesomeQRCode:remove-jcenter-SNAPSHOT",
              bluetooth_beacon     : "org.altbeacon:android-beacon-library:2.19.3",
              pubnub               : "com.pubnub:pubnub-gson:4.21.0",
              joda_time            : "net.danlew:android.joda:2.9.5.1",
              glide                : "com.github.bumptech.glide:glide:3.7.0",
              lottie               : "com.airbnb.android:lottie:3.4.0",
              onfido               : "com.onfido.sdk.capture:onfido-capture-sdk-core:4.5.1",
              spongycastle         : "com.madgag.spongycastle:prov:1.58.0.0",
              usabilla             : "com.usabilla.sdk:ubform:7.2.2",
              jsoup                : "org.jsoup:jsoup:1.11.3",
              zendesk              : "com.zendesk:support:5.0.2",
              shimmer              : "com.facebook.shimmer:shimmer:0.5.0",]

def google = [services: google_services,
              androidx: androidx,
              firebase: firebase,
              room    : room,
              hilt    : hilt,
              arch    : arch,
              material: "com.google.android.material:material:1.3.0",
              gson    : "com.google.code.gson:gson:2.8.6",
              flexbox : "com.google.android.flexbox:flexbox:3.0.0",
              desugaring: "com.android.tools:desugar_jdk_libs:1.1.5",]

def thirdparty = [realm   : realm,
                  segment : segment,
                  newrelic: newrelic,
                  others  : others,]

ext.versions = versions

ext.deps = [core      : core,
            google    : google,
            thirdparty: thirdparty,
            testing   : testing,]

ext.constants = [STRING               : "String",
                 INT                  : "int",
                 STRING_RESOURCE      : "string",
                 STAGING              : "\"STAGING\"",
                 DEV                  : "\"DEV\"",
                 MOCK                 : "\"MOCK\"",
                 AUTOMATION           : "\"AUTOMATION\"",
                 PROD                 : "\"PROD\"",
                 ENVIRONMENT          : "ENVIRONMENT",
                 ACCOUNT_TYPE         : "ACCOUNT_TYPE",
                 AUTHORITY            : "AUTHORITY",
                 ACCOUNT_TYPE_RESOURCE: "account_type",
                 AUTHORITY_RESOURCE   : "authority",]

static def addRepos(RepositoryHandler handler) {
  handler.google()
  handler.mavenCentral()
  handler.maven { url "https://jitpack.io" }
  handler.maven { url "https://zendesk.jfrog.io/zendesk/repo" }
  handler.maven { url "http://maven.apptimize.com/artifactory/repo" }
  handler.maven { url "https://appboy.github.io/appboy-android-sdk/sdk" }
}

ext.addRepos = this.&addRepos
